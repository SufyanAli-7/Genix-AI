generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserApiLimit {
  id        String   @id      @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSubscription {
  id String @id @default(cuid())
  userId String @unique
  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Conversation {
  id String @id @default(cuid())
  userId String
  title String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages Message[]
  
  @@index([userId])
}

model Message {
  id String @id @default(cuid())
  conversationId String
  role String // "user" | "assistant" | "system"
  content String @db.Text
  createdAt DateTime @default(now())
  
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@index([conversationId])
}

model Image {
  id String @id @default(cuid())
  userId String
  prompt String
  imageUrl String @db.Text
  amount String?
  resolution String?
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([createdAt])
}

model Video {
  id String @id @default(cuid())
  userId String
  prompt String
  videoUrl String @db.Text
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([createdAt])
}

model Music {
  id        String   @id @default(cuid())
  userId    String
  prompt    String
  musicUrl  String   @db.Text
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([createdAt])
}

model CodeGeneration {
  id        String   @id @default(cuid())
  userId    String
  title     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  CodeMessage[]
  
  @@index([userId])
  @@index([createdAt])
}

model CodeMessage {
  id               String         @id @default(cuid())
  codeGenerationId String
  role             String         // "user" | "assistant" | "system"
  content          String         @db.Text
  createdAt        DateTime       @default(now())
  
  codeGeneration   CodeGeneration @relation(fields: [codeGenerationId], references: [id], onDelete: Cascade)
  
  @@index([codeGenerationId])
}